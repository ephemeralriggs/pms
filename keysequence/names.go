package keysequence

import "github.com/gdamore/tcell/v2"

// keyNames maps special key names to their corresponding Key value in tcell.
// Used for specifying keybindings. Always use lowercase keys.
var keyNames = map[string]*tcell.EventKey{
	"backspace":  tcell.NewEventKey(tcell.KeyBackspace, 0, tcell.ModNone),
	"backspace2": tcell.NewEventKey(tcell.KeyBackspace2, 0, tcell.ModNone),
	"backtab":    tcell.NewEventKey(tcell.KeyBacktab, 0, tcell.ModNone),
	"cancel":     tcell.NewEventKey(tcell.KeyCancel, 0, tcell.ModNone),
	"center":     tcell.NewEventKey(tcell.KeyCenter, 0, tcell.ModNone),
	"clear":      tcell.NewEventKey(tcell.KeyClear, 0, tcell.ModNone),
	"delete":     tcell.NewEventKey(tcell.KeyDelete, 0, tcell.ModNone),
	"down":       tcell.NewEventKey(tcell.KeyDown, 0, tcell.ModNone),
	"downleft":   tcell.NewEventKey(tcell.KeyDownLeft, 0, tcell.ModNone),
	"downright":  tcell.NewEventKey(tcell.KeyDownRight, 0, tcell.ModNone),
	"end":        tcell.NewEventKey(tcell.KeyEnd, 0, tcell.ModNone),
	"enter":      tcell.NewEventKey(tcell.KeyEnter, 0, tcell.ModNone),
	"esc":        tcell.NewEventKey(tcell.KeyEsc, 0, tcell.ModNone),
	"exit":       tcell.NewEventKey(tcell.KeyExit, 0, tcell.ModNone),
	"home":       tcell.NewEventKey(tcell.KeyHome, 0, tcell.ModNone),
	"insert":     tcell.NewEventKey(tcell.KeyInsert, 0, tcell.ModNone),
	"left":       tcell.NewEventKey(tcell.KeyLeft, 0, tcell.ModNone),
	"pause":      tcell.NewEventKey(tcell.KeyPause, 0, tcell.ModNone),
	"pgdn":       tcell.NewEventKey(tcell.KeyPgDn, 0, tcell.ModNone),
	"pgup":       tcell.NewEventKey(tcell.KeyPgUp, 0, tcell.ModNone),
	"print":      tcell.NewEventKey(tcell.KeyPrint, 0, tcell.ModNone),
	"right":      tcell.NewEventKey(tcell.KeyRight, 0, tcell.ModNone),
	"space":      tcell.NewEventKey(tcell.KeyRune, ' ', tcell.ModNone),
	"tab":        tcell.NewEventKey(tcell.KeyTab, 0, tcell.ModNone),
	"up":         tcell.NewEventKey(tcell.KeyUp, 0, tcell.ModNone),
	"upleft":     tcell.NewEventKey(tcell.KeyUpLeft, 0, tcell.ModNone),
	"upright":    tcell.NewEventKey(tcell.KeyUpRight, 0, tcell.ModNone),
	"f1":         tcell.NewEventKey(tcell.KeyF1, 0, tcell.ModNone),
	"f2":         tcell.NewEventKey(tcell.KeyF2, 0, tcell.ModNone),
	"f3":         tcell.NewEventKey(tcell.KeyF3, 0, tcell.ModNone),
	"f4":         tcell.NewEventKey(tcell.KeyF4, 0, tcell.ModNone),
	"f5":         tcell.NewEventKey(tcell.KeyF5, 0, tcell.ModNone),
	"f6":         tcell.NewEventKey(tcell.KeyF6, 0, tcell.ModNone),
	"f7":         tcell.NewEventKey(tcell.KeyF7, 0, tcell.ModNone),
	"f8":         tcell.NewEventKey(tcell.KeyF8, 0, tcell.ModNone),
	"f9":         tcell.NewEventKey(tcell.KeyF9, 0, tcell.ModNone),
	"f10":        tcell.NewEventKey(tcell.KeyF10, 0, tcell.ModNone),
	"f11":        tcell.NewEventKey(tcell.KeyF11, 0, tcell.ModNone),
	"f12":        tcell.NewEventKey(tcell.KeyF12, 0, tcell.ModNone),
	"f13":        tcell.NewEventKey(tcell.KeyF13, 0, tcell.ModNone),
	"f14":        tcell.NewEventKey(tcell.KeyF14, 0, tcell.ModNone),
	"f15":        tcell.NewEventKey(tcell.KeyF15, 0, tcell.ModNone),
	"f16":        tcell.NewEventKey(tcell.KeyF16, 0, tcell.ModNone),
	"f17":        tcell.NewEventKey(tcell.KeyF17, 0, tcell.ModNone),
	"f18":        tcell.NewEventKey(tcell.KeyF18, 0, tcell.ModNone),
	"f19":        tcell.NewEventKey(tcell.KeyF19, 0, tcell.ModNone),
	"f20":        tcell.NewEventKey(tcell.KeyF20, 0, tcell.ModNone),
	"f21":        tcell.NewEventKey(tcell.KeyF21, 0, tcell.ModNone),
	"f22":        tcell.NewEventKey(tcell.KeyF22, 0, tcell.ModNone),
	"f23":        tcell.NewEventKey(tcell.KeyF23, 0, tcell.ModNone),
	"f24":        tcell.NewEventKey(tcell.KeyF24, 0, tcell.ModNone),
	"f25":        tcell.NewEventKey(tcell.KeyF25, 0, tcell.ModNone),
	"f26":        tcell.NewEventKey(tcell.KeyF26, 0, tcell.ModNone),
	"f27":        tcell.NewEventKey(tcell.KeyF27, 0, tcell.ModNone),
	"f28":        tcell.NewEventKey(tcell.KeyF28, 0, tcell.ModNone),
	"f29":        tcell.NewEventKey(tcell.KeyF29, 0, tcell.ModNone),
	"f30":        tcell.NewEventKey(tcell.KeyF30, 0, tcell.ModNone),
	"f31":        tcell.NewEventKey(tcell.KeyF31, 0, tcell.ModNone),
	"f32":        tcell.NewEventKey(tcell.KeyF32, 0, tcell.ModNone),
	"f33":        tcell.NewEventKey(tcell.KeyF33, 0, tcell.ModNone),
	"f34":        tcell.NewEventKey(tcell.KeyF34, 0, tcell.ModNone),
	"f35":        tcell.NewEventKey(tcell.KeyF35, 0, tcell.ModNone),
	"f36":        tcell.NewEventKey(tcell.KeyF36, 0, tcell.ModNone),
	"f37":        tcell.NewEventKey(tcell.KeyF37, 0, tcell.ModNone),
	"f38":        tcell.NewEventKey(tcell.KeyF38, 0, tcell.ModNone),
	"f39":        tcell.NewEventKey(tcell.KeyF39, 0, tcell.ModNone),
	"f40":        tcell.NewEventKey(tcell.KeyF40, 0, tcell.ModNone),
	"f41":        tcell.NewEventKey(tcell.KeyF41, 0, tcell.ModNone),
	"f42":        tcell.NewEventKey(tcell.KeyF42, 0, tcell.ModNone),
	"f43":        tcell.NewEventKey(tcell.KeyF43, 0, tcell.ModNone),
	"f44":        tcell.NewEventKey(tcell.KeyF44, 0, tcell.ModNone),
	"f45":        tcell.NewEventKey(tcell.KeyF45, 0, tcell.ModNone),
	"f46":        tcell.NewEventKey(tcell.KeyF46, 0, tcell.ModNone),
	"f47":        tcell.NewEventKey(tcell.KeyF47, 0, tcell.ModNone),
	"f48":        tcell.NewEventKey(tcell.KeyF48, 0, tcell.ModNone),
	"f49":        tcell.NewEventKey(tcell.KeyF49, 0, tcell.ModNone),
	"f50":        tcell.NewEventKey(tcell.KeyF50, 0, tcell.ModNone),
	"f51":        tcell.NewEventKey(tcell.KeyF51, 0, tcell.ModNone),
	"f52":        tcell.NewEventKey(tcell.KeyF52, 0, tcell.ModNone),
	"f53":        tcell.NewEventKey(tcell.KeyF53, 0, tcell.ModNone),
	"f54":        tcell.NewEventKey(tcell.KeyF54, 0, tcell.ModNone),
	"f55":        tcell.NewEventKey(tcell.KeyF55, 0, tcell.ModNone),
	"f56":        tcell.NewEventKey(tcell.KeyF56, 0, tcell.ModNone),
	"f57":        tcell.NewEventKey(tcell.KeyF57, 0, tcell.ModNone),
	"f58":        tcell.NewEventKey(tcell.KeyF58, 0, tcell.ModNone),
	"f59":        tcell.NewEventKey(tcell.KeyF59, 0, tcell.ModNone),
	"f60":        tcell.NewEventKey(tcell.KeyF60, 0, tcell.ModNone),
	"f61":        tcell.NewEventKey(tcell.KeyF61, 0, tcell.ModNone),
	"f62":        tcell.NewEventKey(tcell.KeyF62, 0, tcell.ModNone),
	"f63":        tcell.NewEventKey(tcell.KeyF63, 0, tcell.ModNone),
	"f64":        tcell.NewEventKey(tcell.KeyF64, 0, tcell.ModNone),
}
